// <auto-generated />
using System;
using GestaoProducao_MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoProducao_MVC.Migrations
{
    [DbContext(typeof(GestaoProducao_MVCContext))]
    partial class GestaoProducao_MVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestaoProducao_MVC.Models.Apontamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("bit");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int?>("Operacao")
                        .HasColumnType("int");

                    b.Property<int>("ProcessoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TempoTotal")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("ProcessoId");

                    b.ToTable("Apontamento");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.CodigoParada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CodigoParada");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maquina");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.OrdemProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpStatus")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeProduto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrdemProduto");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoPeca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdemProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadePeca")
                        .HasColumnType("int");

                    b.Property<long?>("TempoEstimado")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrdemProdutoId");

                    b.ToTable("Processo");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.RegistroParada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApontamentoId")
                        .HasColumnType("int");

                    b.Property<int>("CodigoParadaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParadaAtiva")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TempoTotal")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApontamentoId");

                    b.HasIndex("CodigoParadaId");

                    b.ToTable("RegistroParada");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Apontamento", b =>
                {
                    b.HasOne("GestaoProducao_MVC.Models.Funcionario", "Funcionario")
                        .WithMany("Apontamentos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoProducao_MVC.Models.Maquina", "Maquina")
                        .WithMany("Apontamentos")
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoProducao_MVC.Models.Processo", "Processo")
                        .WithMany("Apontamentos")
                        .HasForeignKey("ProcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Maquina");

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Processo", b =>
                {
                    b.HasOne("GestaoProducao_MVC.Models.OrdemProduto", "OrdemProduto")
                        .WithMany("Processos")
                        .HasForeignKey("OrdemProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemProduto");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.RegistroParada", b =>
                {
                    b.HasOne("GestaoProducao_MVC.Models.Apontamento", "Apontamento")
                        .WithMany("RegistroParadas")
                        .HasForeignKey("ApontamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoProducao_MVC.Models.CodigoParada", "CodigoParada")
                        .WithMany("RegistroParadas")
                        .HasForeignKey("CodigoParadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apontamento");

                    b.Navigation("CodigoParada");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Apontamento", b =>
                {
                    b.Navigation("RegistroParadas");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.CodigoParada", b =>
                {
                    b.Navigation("RegistroParadas");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Funcionario", b =>
                {
                    b.Navigation("Apontamentos");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Maquina", b =>
                {
                    b.Navigation("Apontamentos");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.OrdemProduto", b =>
                {
                    b.Navigation("Processos");
                });

            modelBuilder.Entity("GestaoProducao_MVC.Models.Processo", b =>
                {
                    b.Navigation("Apontamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
