@model GestaoProducao_MVC.Models.ViewModel.ProcessoViewModel

@{
    ViewData["Title"] = "Detalhes do Processo";
}


<h1>@ViewData["Title"]</h1>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Processo.Id" class="btn btn-outline-warning">Editar</a>
    <a asp-action="Index" class="btn btn-outline-dark">Voltar</a>
</div>



<div class="conteudoDetails">

    <div class="details-ponto">
        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.Id)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.Id)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.CodigoPeca)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.CodigoPeca)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.Descricao)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.Descricao)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.QuantidadePeca)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.QuantidadePeca)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.OrdemProdutoId)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.OrdemProdutoId)</p>
        </div>



        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.DataCriacao)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.DataCriacao)</p>
        </div>

    </div>
    <div class="tempo">
        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TempoEstimadoFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TempoEstimadoFormatado)</p>
        </div>
        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TotalTempoDecorridoFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TotalTempoDecorridoFormatado)</p>
        </div>

        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TotalTempoParadasFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TotalTempoParadasFormatado)</p>
        </div>


        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TotalTempoUtilFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TotalTempoUtilFormatado)</p>
        </div>

        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TempoAproximadoItem)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TempoAproximadoItem)</p>
        </div>

    </div>

</div>

@if (TempData["TempoEstimado"] != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>Atenção!</strong><p class="paragragoErro">@TempData["TempoEstimado"]</p>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].Funcionario.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].Maquina.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].Processo.OrdemProduto.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].Operacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].DataInicial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Apontamentos[0].TempoTotal)
            </th>

            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Apontamentos)
        {
            @if (item.Status == GestaoProducao_MVC.Models.Enums.AptStatus.Ativo)
            {
                ViewData["Active"] = "table-success";

            }
            else
            {
                ViewData["Active"] = "table-primary";

            }


            <tr class=@ViewData["Active"]>
                <td>
                    @Html.DisplayFor(modelItem => item.Funcionario.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Maquina.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Processo.OrdemProdutoId)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Operacao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataInicial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalTime)
                </td>
                <td>
                    <a asp-controller="Apontamentos" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-controller="Apontamentos" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Apontamentos" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


