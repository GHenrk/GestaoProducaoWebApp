@model GestaoProducao_MVC.Models.ViewModel.ProcessoViewModel

@{
    ViewData["Title"] = "Detalhes do Processo";
}


<h1 class="text-center">@ViewData["Title"]</h1>

<div class="menuDetails">
    <a asp-action="Index" class="btn btn-outline-dark">Vizualizar todos processos</a>
    <a asp-action="Edit" asp-route-id="@Model?.Processo.Id" class="btn btn-outline-warning">Editar</a>
</div>

<div class="errorDiv">
    
@if (TempData["TempoEstimado"] != null)
{
    <div class="alert alert-dismissible alert-danger">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <strong>Atenção!</strong><p class="paragragoErro">@TempData["TempoEstimado"]</p>
    </div>
}

</div>


<div class="conteudoDetails">


    <div class="details-ponto">
        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.Id)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.Id)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.CodigoPeca)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.CodigoPeca)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.Descricao)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.Descricao)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.QuantidadePeca)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.QuantidadePeca)</p>
        </div>

        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.OrdemProdutoId)</p>
            <p class="valueData">
                <a asp-controller="OrdemProdutos" class="linkZero" asp-action="Details" asp-route-id="@Model.Processo.OrdemProdutoId">
                @Html.DisplayFor(model => model.Processo.OrdemProdutoId)
                </a>
            </p>
           
        </div>



        <div class="secaoData">
            <p class="itemData">@Html.DisplayNameFor(model => model.Processo.DataCriacao)</p>
            <p class="valueData">@Html.DisplayFor(model => model.Processo.DataCriacao)</p>
        </div>

    </div>
    <div class="tempo">
        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TempoEstimadoFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TempoEstimadoFormatado)</p>
        </div>

        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TotalTempoDecorridoFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TotalTempoDecorridoFormatado)</p>
        </div>

        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TotalTempoParadasFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TotalTempoParadasFormatado)</p>
        </div>


        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TotalTempoUtilFormatado)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TotalTempoUtilFormatado)</p>
        </div>

        <div class="cardTempo">
            <p class="labelTempo">@Html.DisplayNameFor(model => model.Processo.TempoAproximadoItem)</p>
            <p class="displayTempo">@Html.DisplayFor(model => model.Processo.TempoAproximadoItem)</p>
        </div>

    </div>

</div>


@if (Model.Apontamentos.Any())
{
    <div class="secaoBtn">
        <button type="button" id="btnListarApontamentos" class="btn btn-outline-dark">Listar Apontamentos</button>
    </div>
    <div class="secaoHidden" id="secaoProcesso">

        <h4 class="text-center">Apontamentos neste processo</h4>

        <div class="secaoParadas">
            @foreach (var item in Model.Apontamentos)
            {
                @if (item.Status == GestaoProducao_MVC.Models.Enums.AptStatus.Ativo)
                {
                    TempData["Active"] = "cardAptAtivo";

                }
                 else if(item.Status == GestaoProducao_MVC.Models.Enums.AptStatus.Parado)
                {
                    TempData["Active"] = "cardParadaAtiva";
                }
                else {
                     
                    TempData["Active"] = "cardParadaEncerrada";
                    
                }

               
                <div class="cardParada @TempData["Active"]">

                    <p class="motivoParada">
                       @Html.DisplayFor(modelItem => item.Maquina.Nome)
                    </p>
                    <p class="itemCard">
                       Operação: @Html.DisplayFor(modelItem => item.Operacao)
                    </P>
                    <p class="itemCard">
                        Status: @Html.DisplayFor(modelItem => item.Status)
                    </p>
                    <p class="tempoTotalParada">
                        Tempo Total: @Html.DisplayFor(modelItem => item.TotalTime)
                    </p>
                    <a class="btn btn-sm btn-outline-dark" asp-controller="Apontamentos" asp-action="Details" asp-route-id="@item.Id">+ Detalhes</a>
                </div>
            }

        </div>

    </div>

}



<script src="~/js/processoDetails.js"></script>




